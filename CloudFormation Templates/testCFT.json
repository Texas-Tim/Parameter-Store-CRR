{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "KMSKey": {
            "Description": "KMS Key in target region",
            "Type": "String",
            "Default": "alias/SSMKey"
        },
        "DestinationRegion": {
            "Description": "Destination Region for Target Parameter Store",
            "Type": "String",
            "Default": "us-east-2"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "7e4395f1-e2b0-4820-83ea-c54a7152796d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 30
                },
                "z": 1,
                "embeds": []
            },
            "87812940-09e2-4371-9f1a-3b21ab87613a": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 220
                },
                "z": 1,
                "embeds": []
            },
            "26fe75af-a7a0-44ef-a4b8-0c8c16fdc768": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 330,
                    "y": 110
                },
                "z": 1,
                "embeds": []
            },
            "564ce688-c51b-4bdc-b89e-0549d8c40458": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 330,
                    "y": 220
                },
                "z": 1,
                "embeds": []
            },
            "f70c3873-e009-4e8f-b74a-5ace9282f6f3": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 260,
                    "y": 30
                },
                "z": 1,
                "embeds": []
            }
        }
    },
    "Resources": {
        "SSMParameterStoreCRR": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Sync parameters into new region",
                "FunctionName": {
                    "Fn::Join": [
                        "",
                        [
                            "SSMParameterStoreCRR-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "Handler": "index.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "AWSLambdaCRRRole",
                        "Arn"
                    ]
                },
                "Timeout": 360,
                "Runtime": "python3.9",
                "Code": {
                    "ZipFile": "import json\nimport boto3\nimport os\n\n#region of your default parameter store\ndefault_ssm = boto3.client('ssm')\n\n#region of your target DR parameter store\nregion = os.environ.get('REGION')\ntarget_ssm = boto3.client('ssm', region)\n\n#SQS \nsqs = boto3.client('sqs')\nSqsURL = os.environ.get('SQSURL')\n\n#KMS key if applicable for your target parameters\nkey = os.environ.get('KEY')\n\ndef lambda_handler(event, context):\n    \"\"\"\n    Assumes a String Datatype!\n    \"\"\"\n    receiptHandle = event[\"Records\"][0][\"receiptHandle\"]\n    body = json.loads(event[\"Records\"][0][\"body\"])\n    # print(\"body: \", body)\n    #name, type and operation of the event. Ignores Delete\n    name = body[\"detail\"]['name']\n    secure = body[\"detail\"]['type']\n    operation = body[\"detail\"]['operation']\n    \n    \n    #get the new parameter value from the parameter store\n    if secure == \"SecureString\":\n        parameter = default_ssm.get_parameter(Name=name, WithDecryption=True)['Parameter']['Value']\n        \n    else:\n        parameter = default_ssm.get_parameter(Name=name)['Parameter']['Value']\n    \n    #Only running Update and Create Operations\n    if operation == \"Update\":\n        if secure == \"SecureString\":\n            target_ssm.put_parameter(Name=name, Value=parameter, Type=secure, KeyId=key, Overwrite=True)\n        else:\n            target_ssm.put_parameter(Name=name, Value=parameter, Type=secure, Overwrite=True)\n    elif operation == \"Create\":\n        if secure == \"SecureString\":\n            target_ssm.put_parameter(Name=name, Value=parameter, Type=secure, KeyId=key)\n        else:\n            target_ssm.put_parameter(Name=name, Value=parameter, Type=secure)\n    else:\n        print(\"Alternate operation not listed in lambda handler\")\n    \n    sqs.delete_message(QueueUrl=SqsURL, ReceiptHandle=receiptHandle)\n    print(\"Successful Copy of \", name, \" parameter\")\n"
                },
                "Environment": {
                    "Variables": {
                        "KEY": {
                            "Ref": "KMSKey"
                        },
                        "REGION": {
                            "Ref": "DestinationRegion"
                        },
                        "SQSURL": {
                            "Ref": "SQSQueue"
                        }
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "26fe75af-a7a0-44ef-a4b8-0c8c16fdc768"
                }
            }
        },
        "LambdaTriggerSQSQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::GetAtt": [
                        "SQSQueue",
                        "Arn"
                    ]
                },
                "FunctionName": {
                    "Ref": "SSMParameterStoreCRR"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f70c3873-e009-4e8f-b74a-5ace9282f6f3"
                }
            }
        },
        "AWSLambdaCRRRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/service-role/",
                "Policies": [
                    {
                        "PolicyName": "AWSLambdaBasicExecutionRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "logs:CreateLogGroup",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:logs:us-east-1:",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:logs:us-east-1:",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":log-group:/aws/lambda/SSMParameterStoreCRR:*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "SSMCopyAllPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "VisualEditor0",
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt",
                                        "kms:Encrypt"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:kms:*:",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":key/*"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Sid": "VisualEditor1",
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:GetParameter",
                                        "ssm:PutParameter"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Sid": "VisualEditor2",
                                    "Effect": "Allow",
                                    "Action": [
                                        "sqs:ReceiveMessage",
                                        "sqs:DeleteMessage",
                                        "sqs:GetQueueAttributes"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "564ce688-c51b-4bdc-b89e-0549d8c40458"
                }
            }
        },
        "ParameterStoreEvent": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Captures any create, update or delete event in the parameter store",
                "EventBusName": "default",
                "EventPattern": {
                    "source": [
                        "aws.ssm"
                    ],
                    "detail-type": [
                        "Parameter Store Change"
                    ]
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            "ParameterStoreCRR-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "SQSQueue",
                                "Arn"
                            ]
                        },
                        "Id": "Id1234",
                        "RetryPolicy": {
                            "MaximumRetryAttempts": 4,
                            "MaximumEventAgeInSeconds": 400
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7e4395f1-e2b0-4820-83ea-c54a7152796d"
                }
            },
            "DependsOn": [
                "SQSQueue"
            ]
        },
        "SQSQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": {
                    "Fn::Join": [
                        "",
                        [
                            "SSMQueue-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "VisibilityTimeout": 900
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "87812940-09e2-4371-9f1a-3b21ab87613a"
                }
            }
        }
    }
}
